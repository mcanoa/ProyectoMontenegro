/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.ByteArrayInputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import logica.HiloGuardarHuella;
import logica.dataConnection;
import logica.institutoMontenegro;

/**
 *
 * @author Maria Alejandra Martos Diaz
 * @author Mateo Cano Alfonso
 * @author Juan Jeferson alape
 *
 */
public class VentanaGestionEstudiante extends JFrame {

    private static VentanaGestionEstudiante ventana;
    String[] busquedas = {"Documento de Identidad", "Apellidos"};
    private int estadoGuardar;

    institutoMontenegro instituto = new institutoMontenegro();

    PreparedStatement pst;
    Connection cn;
    ResultSet rst;

    HiloGuardarHuella hilo;

    static ByteArrayInputStream datosHuella;
    static Integer tamanoHuella;

    DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form VentanaBusquedaEstudiante
     */
    public VentanaGestionEstudiante() {

        estadoGuardar = 0;//estado que indica que se va a guardar un estdiante nuevo
        modelo.addColumn("Documento");
        modelo.addColumn("Nombres");
        modelo.addColumn("Apellidos");

        initComponents();
        jTableResultado.setModel(modelo);
        hilo = new HiloGuardarHuella(jLabelImagenHuella, jButtonGuardar);

//        Iniciar();
    }

    public static VentanaGestionEstudiante getInstanceSingleton() {
        if (ventana == null) {
            ventana = new VentanaGestionEstudiante();
        }
        return ventana;
    }

    /**
     *
     * @param datosHuella
     */
    public static void setDatosHuella(ByteArrayInputStream datosHuella) {
        VentanaGestionEstudiante.datosHuella = datosHuella;
    }

    /**
     *
     * @param tamanoHuella
     */
    public static void setTamanoHuella(Integer tamanoHuella) {
        VentanaGestionEstudiante.tamanoHuella = tamanoHuella;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitulo = new javax.swing.JLabel();
        jPanelDatos = new javax.swing.JPanel();
        jLabelDocumento = new JLabel();
        jLabelNombres = new JLabel();
        jLabelApellidos = new JLabel();
        jLabelGrado = new JLabel();
        jLabelGrupo = new JLabel();
        jLabelZonaAlumno = new JLabel();
        jLabelJornada = new JLabel();
        jTextFieldDocumento = new JTextField();
        jTextFieldNombres = new JTextField();
        jTextFieldApellidos = new JTextField();
        jTextFieldGrado = new JTextField();
        jTextFieldGrupo = new JTextField();
        jTextFieldZonaAlumno = new JTextField();
        jTextFieldJornada = new JTextField();
        jButtonGuardar = new javax.swing.JButton();
        jButtonActualizaHuella = new javax.swing.JButton();
        jPanelHuella = new javax.swing.JPanel();
        jPanelContenedorHuella = new javax.swing.JPanel();
        jLabelImagenHuella = new javax.swing.JLabel();
        jLabelHuella = new javax.swing.JLabel();
        jButtonLimpiarCampos = new javax.swing.JButton();
        jPanelLista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResultado = new javax.swing.JTable();
        jLabelBuscaPor = new javax.swing.JLabel();
        jComboBoxBuscarPor = new JComboBox<>(busquedas);
        jTextFieldBuscar = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PAE Instituto Montenegro- Gesti√≥n estudiantes");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabelTitulo.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabelTitulo.setText("Busqueda De Estudiantes");

        jPanelDatos.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Estdiante"));

        jLabelDocumento.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelDocumento.setText("Documento C.C/T.I:");

        jLabelNombres.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelNombres.setText("Nombres:");

        jLabelApellidos.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelApellidos.setText("Apellidos:");

        jLabelGrado.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelGrado.setText("Grado:");

        jLabelGrupo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelGrupo.setText("Grupo:");

        jLabelZonaAlumno.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelZonaAlumno.setText("Zona Alumno:");

        jLabelJornada.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelJornada.setText("Jornada:");

        jTextFieldDocumento.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextFieldDocumento.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldDocumento.setDoubleBuffered(true);
        jTextFieldDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDocumentoKeyTyped(evt);
            }
        });

        jTextFieldNombres.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextFieldNombres.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldNombres.setDoubleBuffered(true);
        jTextFieldNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombresKeyTyped(evt);
            }
        });

        jTextFieldApellidos.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextFieldApellidos.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldApellidos.setDoubleBuffered(true);
        jTextFieldApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldApellidosKeyTyped(evt);
            }
        });

        jTextFieldGrado.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextFieldGrado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldGrado.setDoubleBuffered(true);
        jTextFieldGrado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldGradoKeyTyped(evt);
            }
        });

        jTextFieldGrupo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextFieldGrupo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldGrupo.setDoubleBuffered(true);
        jTextFieldGrupo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldGrupoKeyTyped(evt);
            }
        });

        jTextFieldZonaAlumno.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextFieldZonaAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldZonaAlumnoActionPerformed(evt);
            }
        });
        jTextFieldZonaAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldZonaAlumnoKeyTyped(evt);
            }
        });

        jTextFieldJornada.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextFieldJornada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJornadaActionPerformed(evt);
            }
        });
        jTextFieldJornada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldJornadaKeyTyped(evt);
            }
        });

        jButtonGuardar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButtonGuardar.setText("Guardar ");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonActualizaHuella.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButtonActualizaHuella.setText("<html>Tomar <br> Huella</html>");
        jButtonActualizaHuella.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizaHuellaActionPerformed(evt);
            }
        });

        jPanelHuella.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanelContenedorHuellaLayout = new javax.swing.GroupLayout(jPanelContenedorHuella);
        jPanelContenedorHuella.setLayout(jPanelContenedorHuellaLayout);
        jPanelContenedorHuellaLayout.setHorizontalGroup(
            jPanelContenedorHuellaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelImagenHuella, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );
        jPanelContenedorHuellaLayout.setVerticalGroup(
            jPanelContenedorHuellaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelImagenHuella, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelHuellaLayout = new javax.swing.GroupLayout(jPanelHuella);
        jPanelHuella.setLayout(jPanelHuellaLayout);
        jPanelHuellaLayout.setHorizontalGroup(
            jPanelHuellaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHuellaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelContenedorHuella, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelHuellaLayout.setVerticalGroup(
            jPanelHuellaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHuellaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelContenedorHuella, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabelHuella.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelHuella.setText("Huella Dactilar:");

        jButtonLimpiarCampos.setText("Limpiar Campos");
        jButtonLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelApellidos)
                            .addComponent(jLabelGrupo)
                            .addComponent(jLabelGrado)
                            .addComponent(jLabelNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDocumento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldApellidos)
                            .addComponent(jTextFieldGrado)
                            .addComponent(jTextFieldNombres, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldGrupo)
                            .addComponent(jTextFieldDocumento, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelDatosLayout.createSequentialGroup()
                                    .addComponent(jLabelJornada)
                                    .addGap(26, 26, 26))
                                .addComponent(jLabelZonaAlumno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelHuella))
                        .addGap(13, 13, 13)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addComponent(jPanelHuella, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(jButtonActualizaHuella))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButtonLimpiarCampos, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                                            .addComponent(jButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addComponent(jTextFieldZonaAlumno)
                            .addComponent(jTextFieldJornada))))
                .addGap(6, 6, 6))
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldGrado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGrado, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelZonaAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldZonaAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelJornada, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldJornada, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelHuella, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHuella, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonActualizaHuella, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jButtonLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
        );

        jPanelLista.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado De Estudiantes"));

        jTableResultado.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTableResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableResultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableResultadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableResultado);

        jLabelBuscaPor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelBuscaPor.setText("Buscar Por:");

        jTextFieldBuscar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextFieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyTyped(evt);
            }
        });

        jButtonBuscar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonEliminar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelListaLayout = new javax.swing.GroupLayout(jPanelLista);
        jPanelLista.setLayout(jPanelListaLayout);
        jPanelListaLayout.setHorizontalGroup(
            jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaLayout.createSequentialGroup()
                .addGroup(jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                    .addGroup(jPanelListaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelListaLayout.createSequentialGroup()
                                .addGroup(jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldBuscar)
                                    .addGroup(jPanelListaLayout.createSequentialGroup()
                                        .addComponent(jLabelBuscaPor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBoxBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBuscar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelListaLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonEliminar)))))
                .addContainerGap())
        );
        jPanelListaLayout.setVerticalGroup(
            jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaLayout.createSequentialGroup()
                .addGroup(jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBuscaPor)
                    .addComponent(jComboBoxBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonEliminar))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabelTitulo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldZonaAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldZonaAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldZonaAlumnoActionPerformed

    private void jTextFieldJornadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJornadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJornadaActionPerformed

    private void jButtonActualizaHuellaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizaHuellaActionPerformed

        jTableResultado.setEnabled(false);
        jButtonGuardar.setEnabled(false);
        jButtonActualizaHuella.setEnabled(false);
        jButtonLimpiarCampos.setEnabled(false);

        SwingUtilities.invokeLater(hilo);

    }//GEN-LAST:event_jButtonActualizaHuellaActionPerformed

    /**
     *
     * @param evt
     */
    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed

        try {
            borrarFilas();
            String metodoBusqueda = (String) jComboBoxBuscarPor.getSelectedItem();

            String atributo = jTextFieldBuscar.getText();
            jTextFieldBuscar.setText("");
            switch (metodoBusqueda) {
                case "Documento de Identidad": //buscar por documento de identidad
                    buscarDocumento(atributo);
                    break;
                case "Apellidos": //buscar por apellidos
                    buscarApellidos(atributo);
                    break;
            }
        } catch (Exception ex) {
            Logger.getLogger(VentanaGestionEstudiante.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonBuscarActionPerformed

    /**
     *
     * @param evt
     */
    private void jTextFieldBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarKeyTyped

        String metodoBusqueda = (String) jComboBoxBuscarPor.getSelectedItem();

        switch (metodoBusqueda) {
            case "Documento de Identidad":
                noTeclearLetras(evt);
                noteclearCaracteres(evt);
                break;
            case "Apellidos":
                noTeclearNumeros(evt);
                noteclearCaracteres(evt);
                break;
        }
    }//GEN-LAST:event_jTextFieldBuscarKeyTyped

    /**
     *
     * @param evt
     */
    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        try {
            boolean resultado;
            if (estadoGuardar == 0) {

                if (tamanoHuella == null && datosHuella == null) {

                    resultado = instituto.guardarEstudiante(jTextFieldDocumento.getText(), jTextFieldNombres.getText(),
                            jTextFieldApellidos.getText(), jTextFieldGrado.getText(),
                            Integer.parseInt(jTextFieldGrupo.getText()), jTextFieldZonaAlumno.getText(),
                            jTextFieldJornada.getText(), datosHuella, 0);

                    if (resultado) {
                        JOptionPane.showMessageDialog(VentanaGestionEstudiante.this, "El estudiante se ha Guardado", "EXITO", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(VentanaGestionEstudiante.this, "El estudiante No se ha Guardado", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    resultado = instituto.guardarEstudiante(jTextFieldDocumento.getText(), jTextFieldNombres.getText(),
                            jTextFieldApellidos.getText(), jTextFieldGrado.getText(),
                            Integer.parseInt(jTextFieldGrupo.getText()), jTextFieldZonaAlumno.getText(),
                            jTextFieldJornada.getText(), datosHuella, tamanoHuella);
                    if (resultado) {
                        JOptionPane.showMessageDialog(VentanaGestionEstudiante.this, "El estudiante se ha Guardado", "EXITO", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(VentanaGestionEstudiante.this, "El estudiante No se ha Guardado", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }

            } else if (estadoGuardar == 1) {

                if (datosHuella == null && tamanoHuella == null) {

                    resultado = instituto.actualizarEstudiante(jTextFieldDocumento.getText(), jTextFieldNombres.getText(),
                            jTextFieldApellidos.getText(), jTextFieldGrado.getText(),
                            Integer.parseInt(jTextFieldGrupo.getText()), jTextFieldZonaAlumno.getText(),
                            jTextFieldJornada.getText(), datosHuella, tamanoHuella);
                    if (resultado) {
                        JOptionPane.showMessageDialog(VentanaGestionEstudiante.this, "El estudiante se ha Guardado", "EXITO", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(VentanaGestionEstudiante.this, "El estudiante No se ha Guardado", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    resultado = instituto.actualizarEstudiante(jTextFieldDocumento.getText(), jTextFieldNombres.getText(),
                            jTextFieldApellidos.getText(), jTextFieldGrado.getText(),
                            Integer.parseInt(jTextFieldGrupo.getText()), jTextFieldZonaAlumno.getText(),
                            jTextFieldJornada.getText(), datosHuella, tamanoHuella);
                    if (resultado) {
                        JOptionPane.showMessageDialog(VentanaGestionEstudiante.this, "El estudiante se ha Modificado", "EXITO", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(VentanaGestionEstudiante.this, "El estudiante No se ha Modificado", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

            hilo.Reclutador.clear();
            limpiarFormulario();

        } catch (SQLException | ParseException e1) {
            JOptionPane.showMessageDialog(null, e1.getStackTrace());
        }


    }//GEN-LAST:event_jButtonGuardarActionPerformed

    /**
     *
     * @param evt
     */
    private void jTableResultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableResultadoMouseClicked

        int filaseleccionada;

        try {

            filaseleccionada = jTableResultado.getSelectedRow();

            if (filaseleccionada == -1) {

                JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila");
                estadoGuardar = 0;

            } else {

                estadoGuardar = 1;//indica que va a actualizar un estudiante

                String documento = (String) modelo.getValueAt(filaseleccionada, 0);
                String nombres = (String) modelo.getValueAt(filaseleccionada, 1);
                String apellidos = (String) modelo.getValueAt(filaseleccionada, 2);

                cn = dataConnection.conexion();
                pst = cn.prepareStatement(
                        "select grado,grupo,zonaAlumno,jornada from estudiante WHERE documento=?");
                pst.setString(1, documento);

                rst = pst.executeQuery();
                if (rst.next()) {

                    jTextFieldDocumento.setText(documento);
                    jTextFieldDocumento.setEnabled(false);
                    jTextFieldNombres.setText(nombres);
                    jTextFieldApellidos.setText(apellidos);
                    jTextFieldGrado.setText(rst.getString("grado"));
                    jTextFieldGrupo.setText(rst.getString("grupo"));
                    jTextFieldZonaAlumno.setText(rst.getString("zonaAlumno"));
                    jTextFieldJornada.setText(rst.getString("jornada"));

                }

            }

        } catch (HeadlessException ex) {

            JOptionPane.showMessageDialog(null, "Error: " + ex + "\nInt√©ntelo nuevamente", " .::Error En la Operacion::.", JOptionPane.ERROR_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(VentanaGestionEstudiante.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTableResultadoMouseClicked

    /**
     * Evento el cual permite eliminar un estudiante del restaurante escolar
     *
     * @param evt
     */
    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed

        int filaseleccionada;

        filaseleccionada = jTableResultado.getSelectedRow();
        if (filaseleccionada == -1) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila");
        } else {

            int eleccion = JOptionPane.showConfirmDialog(null, "Seguro desea eliminar el estudiante", "CONFIRMAR", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (eleccion == JOptionPane.YES_OPTION) {
                String documento = (String) modelo.getValueAt(filaseleccionada, 0);
                cn = dataConnection.conexion();
                try {
                    pst = cn.prepareStatement("delete from estudiante where documento=?");
                    pst.setString(1, documento);
                    int res = pst.executeUpdate();
                    if (res > 0) {
                        limpiarFormulario();
                        modelo.removeRow(jTableResultado.getSelectedRow());
                        JOptionPane.showMessageDialog(null, "Estudiante eliminado satisfactoriamente");

                    } else {
                        JOptionPane.showMessageDialog(null, "el estudiante no existe");
                    }
                    cn.close();

                } catch (SQLException e1) {
                    e1.printStackTrace();
                }

            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarCamposActionPerformed

        estadoGuardar = 0;//estudiante nuevo
        limpiarFormulario();
    }//GEN-LAST:event_jButtonLimpiarCamposActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void jTextFieldDocumentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDocumentoKeyTyped
        noTeclearLetras(evt);
        noteclearCaracteres(evt);
    }//GEN-LAST:event_jTextFieldDocumentoKeyTyped

    private void jTextFieldNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombresKeyTyped

        noTeclearNumeros(evt);
        noteclearCaracteres(evt);
    }//GEN-LAST:event_jTextFieldNombresKeyTyped

    private void jTextFieldApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldApellidosKeyTyped
        noTeclearNumeros(evt);
        noteclearCaracteres(evt);
    }//GEN-LAST:event_jTextFieldApellidosKeyTyped

    private void jTextFieldGradoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldGradoKeyTyped
        noTeclearNumeros(evt);
        noteclearCaracteres(evt);
    }//GEN-LAST:event_jTextFieldGradoKeyTyped

    private void jTextFieldGrupoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldGrupoKeyTyped
        noTeclearLetras(evt);
        noteclearCaracteres(evt);
    }//GEN-LAST:event_jTextFieldGrupoKeyTyped

    private void jTextFieldZonaAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldZonaAlumnoKeyTyped
        noTeclearNumeros(evt);
        noteclearCaracteres(evt);
    }//GEN-LAST:event_jTextFieldZonaAlumnoKeyTyped

    private void jTextFieldJornadaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldJornadaKeyTyped
        noTeclearNumeros(evt);
        noteclearCaracteres(evt);
    }//GEN-LAST:event_jTextFieldJornadaKeyTyped

    /**
     *
     * @param atributo
     */
    public void buscarDocumento(String atributo) {
        if (atributo.length() < 11) {
            try {

                cn = dataConnection.conexion();
                pst = cn.prepareStatement(
                        "select documento,nombres,apellidos from estudiante WHERE documento like ?");

                pst.setString(1, "%" + atributo + "%");

                rst = pst.executeQuery();
                String[] datos = new String[3];
                if (rst.next()) {
                    datos[0] = rst.getString("documento");
                    datos[1] = rst.getString("nombres");
                    datos[2] = rst.getString("apellidos");
                    modelo.addRow(datos);

                    while (rst.next()) {
                        datos[0] = rst.getString("documento");
                        datos[1] = rst.getString("nombres");
                        datos[2] = rst.getString("apellidos");
                        modelo.addRow(datos);

                    }

                } else {
                    JOptionPane.showMessageDialog(null, "El estudiante no existe", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(VentanaGestionEstudiante.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jTextFieldBuscar.setText("");
            JOptionPane.showMessageDialog(null, "Documento invalido");
        }
    }

    /**
     * Metodo que permite buscar un estudiante por el nombres,apellidos y tipo
     * de Documento
     *
     * @param atributo
     *
     * @throws java.lang.Exception
     */
    public void buscarApellidos(String atributo) throws Exception {

        if (atributo != null) {
            cn = dataConnection.conexion();
            pst = cn.prepareStatement(
                    "select documento,nombres,apellidos from estudiante WHERE apellidos like ?");
            pst.setString(1, "%" + atributo + "%");
           

            rst = pst.executeQuery();
            String[] datos = new String[3];
            if (rst.next()) {
                datos[0] = rst.getString("documento");
                datos[1] = rst.getString("nombres");
                datos[2] = rst.getString("apellidos");
                modelo.addRow(datos);

                while (rst.next()) {
                    datos[0] = rst.getString("documento");
                    datos[1] = rst.getString("nombres");
                    datos[2] = rst.getString("apellidos");
                    modelo.addRow(datos);

                }

            } else {
                JOptionPane.showMessageDialog(null, "El estudiante no existe", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        }
    }

    /**
     *
     * @param evt
     */
    public void noteclearCaracteres(KeyEvent evt) {
        int cadena = (int) evt.getKeyChar();
        if (cadena >= 33 && cadena <= 47
                || cadena >= 58 && cadena <= 64
                || cadena >= 91 && cadena <= 96
                || cadena >= 123 && cadena <= 127) {
            JOptionPane.showMessageDialog(null, "no ingrese caracters especiales en los campos de texo");
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }

    }

    /**
     * Metodo para cuando se dijite una letra en un campo de numeros
     *
     * @param evt
     */
    public void noTeclearLetras(KeyEvent evt) {
        if (Character.isLetter((char) evt.getKeyChar())) {
            JOptionPane.showMessageDialog(null, "INGRESE SOLO N√öMEROS", "ERROR", JOptionPane.ERROR_MESSAGE);
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }

    /**
     * Metodo para cuando se dijite un numero en un campo de letras
     *
     * @param evt
     */
    public void noTeclearNumeros(KeyEvent evt) {
        if (Character.isDigit((char) evt.getKeyChar())) {
            JOptionPane.showMessageDialog(null, "INGRESE SOLO LETRAS", "ERROR", JOptionPane.ERROR_MESSAGE);
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }

    /**
     *
     */
    private void borrarFilas() {

        int a = modelo.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            modelo.removeRow(i);
        }

    }

    /**
     * Metodo para limpiar los campos de un formulario
     */
    private void limpiarFormulario() {
        jTextFieldDocumento.setEnabled(true);
        jTextFieldDocumento.setText("");
        jTextFieldNombres.setText("");
        jTextFieldApellidos.setText("");
        jTextFieldGrado.setText("");
        jTextFieldGrupo.setText("");
        jTextFieldZonaAlumno.setText("");
        jTextFieldJornada.setText("");
        jLabelImagenHuella.setIcon(null);
        jButtonActualizaHuella.setEnabled(true);
        jButtonLimpiarCampos.setEnabled(true);
        jTableResultado.setEnabled(true);
        estadoGuardar = 0;
    }

    /**
     *
     * @return
     */
    public Date fechaIncio() {
        String date1 = "1999-05-24";
        Date fecha = java.sql.Date.valueOf(date1);
        return fecha;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizaHuella;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonLimpiarCampos;
    private javax.swing.JComboBox<String> jComboBoxBuscarPor;
    private javax.swing.JLabel jLabelApellidos;
    private javax.swing.JLabel jLabelBuscaPor;
    private javax.swing.JLabel jLabelDocumento;
    private javax.swing.JLabel jLabelGrado;
    private javax.swing.JLabel jLabelGrupo;
    private javax.swing.JLabel jLabelHuella;
    private javax.swing.JLabel jLabelImagenHuella;
    private javax.swing.JLabel jLabelJornada;
    private javax.swing.JLabel jLabelNombres;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelZonaAlumno;
    private javax.swing.JPanel jPanelContenedorHuella;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JPanel jPanelHuella;
    private javax.swing.JPanel jPanelLista;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableResultado;
    private javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldDocumento;
    private javax.swing.JTextField jTextFieldGrado;
    private javax.swing.JTextField jTextFieldGrupo;
    private javax.swing.JTextField jTextFieldJornada;
    private javax.swing.JTextField jTextFieldNombres;
    private javax.swing.JTextField jTextFieldZonaAlumno;
    // End of variables declaration//GEN-END:variables

}
